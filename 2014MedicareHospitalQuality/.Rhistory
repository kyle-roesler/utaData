?pacckrat
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
browser()
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
cube <- function(x, n) {
x^3
}
cube(3)
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
require(httr)
install.packages("json")
install.packages("jason")
require( httr )
require( rjson )
install.packages("rjson")
require( jsonlite )
require( httr )
require( rjson )
require( jsonlite )
oauth_endpoints("github")
clientId     <- "df67b09d9b26c3b19587"
ClientSecret <- "e95c352b49f7a0f60e465460e7fdf5b8377b02af"
clientId     <- "df67b09d9b26c3b19587"
ClientSecret <- "e95c352b49f7a0f60e465460e7fdf5b8377b02af"
id     <- "df67b09d9b26c3b19587"
secret <- "e95c352b49f7a0f60e465460e7fdf5b8377b02af"
myapp <- oauth_app("github",
key = id,
clientSecret = secret )
rm(llist=ls())
require( httr )
require( rjson )
require( jsonlite )
oauth_endpoints("github")
clientId     <- "df67b09d9b26c3b19587"
clientSecret <- "e95c352b49f7a0f60e465460e7fdf5b8377b02af"
rm(llist=ls())
require( httr )
require( rjson )
require( jsonlite )
oauth_endpoints("github")
clientId     <- "df67b09d9b26c3b19587"
clientSecret <- "e95c352b49f7a0f60e465460e7fdf5b8377b02af"
myapp <- oauth_app("github",
key = clientId,
secret = clientSecret )
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
x <- list( a=1:5, b=norm( 10))
x <- list( a=1:5, b=rnorm( 10))
x
laaply(  x  )
lapply(  x  )
x <- list( a=1:5, b=rnorm( 10))
x
lapply(  x  )
lapply(  x, mean  )
?gl
data(iris)
iris[,c(1,5)]
sapply( iris[,c(1,5)], mean,by=Species )
sapply
?sapply
sapply( iris[,c(1,5)], mean, Species )
sapply( iris[,c(1,5)], mean, iris$Species )
sapply( iris, mean )
sapply( iris, summary )
iris[, iris$species=="virginica"]
iris[,4]
iris[,5]
iris[, iris$Species=="virginica"]
iris[, iris$Species==3]
seperate( iris, Species)
iris[,]
iris[,iris$Species=="virginica"]
require(plyr)
?"plyr"
?aggregate
aggregate( Sepal.Length~Species, iris, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
summary( iris )
data(mtcars)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?tapply
with(mtcars, sapply(mpg, cyl, mean))
mtcars[mtcars==4,2]
mtcars[mtcars==4,]
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(mpg, cyl, mean))
t <- with(mtcars, tapply(mpg, cyl, mean))
mpg <- as.vector( t )
mpg[8] - mpg[4]
mpg[3] - mpg[1]
mpg[1] - mpg[3]
?debug
ls()
debug(ls)
ls()
q
?apply
install.packages("Rcmdr")
?Rcmdr
library(Rcmdr)
install.packages("gtable")
library(Rcmdr)
RCommander()
RCmdr()
?"Rcmdr"
exit
library(Rcmdr)
require(Rcmdr)
library(Rcmdr)
Rcmdr()
Rcommander()
library(Rcmdr)
library(Rcmdr)
install.packages("ggplot2")
library(Rcmdr)
?"alr4"
library(Rcmdr)
pima <- read . table (" http :// archive .ics .
uci.edu/ml/ machine - learning - databases
/pima - indians - diabetes /pima - indians -
diabetes . data ", header=F, sep=",")
pima <- read . table (" http :// archive .ics .
uci.edu/ml/ machine - learning - databases
/pima - indians - diabetes /pima - indians -
diabetes . data ", header=F, sep=",")
setwd("C:/Users/Craig/utaStatisticsData/2014 Hospital Quality data")
dir()
require( data.table)
inFile <-
"file:///C:/Users/Craig/Documents/2015-03-Fall/BSTAT 3322/Data/2014 Hospital Quality data.csv"
HQQM <- fread( inFile )
getwd()
getwd()
#file:///C:/Users/Craig/Documents/2015-03-Fall/BSTAT 3322/Data/2014 Hospital Quality data
dir()
rm(list=ls())
require( data.table)
wd <- getwd()
inFile <- file.path( ed, "HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_HOSPITAL.csv" )
inFile <- file.path( ed, "HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_HOSPITAL.csv" )
inFile <- file.path( ed, "HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_HOSPITAL.csv" )
inFile <- file.path( wd, "HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_HOSPITAL.csv" )
HQQM <- fread( inFile )
tables()
require(alr4)
?"alr4"
data(Titanic)
require(alr4)
data(Titanic)
Titanic
data(TitanicSurvival)
TitanicSurvival
