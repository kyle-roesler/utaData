{
    "contents" : "rm( list=ls() )                                  # Clear memory\n\nrequire( Lahman )                                # Data from Lahman sabermetric package\n\ndata( Master )                                   # Load player biography data to obtian birth year\nhead( Master[, 1:10])                            # Trust but verify\n\nrequire( sqldf  )                                # This package aloows us to use Structured Query\n                                                 # Language to manipulte data frames\n\nquery <- paste( \"SELECT playerId,\",              # This is the SQL quesry used to locate\n                       \"birthYear,\",             # Michael Youngs Master row in the Master\n                        \"nameFirst,\",            # table by his first and last name.\n                        \"nameLast\",\n                \"FROM Master\",\n                \"WHERE nameLast='Young'\",\n                  \"AND nameFirst='Michael'\" )\n\nYoungMaster <- sqldf( query  )                   # Execute query against master table.\nhead( YouingMaster )                             # Verify answer.\n\ndata( Batting )                                  # Obtain career batting records.\nhead( Batting )                                  # Verify result.\n\nquery = paste( \"SELECT *\",                       # This query findd and loads all the yearly batting \n               \"FROM YoungMaster,\",              # rows that have Mr. Young's battingID.\n                     \"Batting\",\n               \"WHERE YoungMaster.playerID = \",\n                      \"Batting.playerID\" )\n\nYoungBatting <- sqldf( query )                  # Execute query\n\nrm( list=c( \"Master\", \"Batting\") )              # Recover memory by discarding data frames no \n                                                # longer needed.\n\nYoungBatting$age <-                             # Compute age for each season.\n  with( YoungBatting, \n        yearID - birthYear )\n\nYoungBatting$OBP <-                             # Compute Young's onbase percentage.\n  with( YoungBatting, \n        ( H + BB + IBB + HBP ) / \n          ( AB + BB + IBB + HBP) )       \n\nYoungBatting$SLG <-                            # Cpmpute Young's slugging percentage.\n  with( YoungBatting,\n        ( H + X2B + 2 * X3B + HR ) /\n          AB )\n\nYoungBatting$OBPS <-                           # Compute Youngs onbase plus \n  with( YoungBatting, OBP + SLG)               # plus slugging percentage\n\nrequire( ggplot2 )                             # Needed for graphics grammar plots\n\nggplot( YoungBatting,                          # Specify the data source\n        aes( x=age, y=OBPS )) +                # Set predictor and response variables.\n  \n  geom_point() +                               # Plot data points.\n  \n  geom_smooth( method=loess,                   # Plot loess smoother.\n               color=\"red\" ) +\n  \n  geom_smooth( method=lm,                      # Plot OLS quadratic estimate\n               formula=y~poly(x,2),\n               raw=TRUE,\n               colour=\"blue\") +\n  xlab(\"Age\") +\n  ylab( \"Onbase percentage plus slugging\" ) +\n  ggtitle( \"Michael Young's Hitting Career\"  )\n\nYoungBatting$centeredAge <-                  # Compute centered age to minimize\n  with( YoungBatting, age - mean( age ))     # collinearity problems  \n\nquadraticFit <-                              # Fit and display fit quadratic model\n  lm( OBPS ~ poly( centeredAge, 2 ),\n      YoungBatting )\nsummary( quadraticFit )\n\n\n\n\n\n\n         \n\n\n",
    "created" : 1415239646622.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "669437737",
    "id" : "AA7669B4",
    "lastKnownWriteTime" : 1415249814,
    "path" : "~/Data/Sabermetrics/Michael Young.r",
    "project_path" : "Michael Young.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}