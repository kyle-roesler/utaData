rm( list=ls() )
load("Michael Young.rda")
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
ggplot( CareerHittimg,
aes( x=age, y=obpps  )) +
geom_point()
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
ggplot( CareerHitting,
aes( x=age, y=obpps  )) +
geom_point()
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point()
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() =
geom_smooth( method=loess  )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  )
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
olsFit <- lm( obppslg ~  cAge + cAge^2, CareerHitting )
summary( olsFit  )
CareerHitting$cAge2 <- with( CareerHitting, cAge2)
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit  )
CareeHitting$fitted <- fitted( olsFit )
CareerHitting$fitted <- fitted( olsFit )
p <- p + geom_line( aes( x=Age, y=Fitted,
color="blue") )
p
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  )
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit  )
CareerHitting$fitted <- fitted( olsFit )
p <- p + geom_line( aes( x=Age, y=Fitted,
color="blue") )
p
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  )
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit  )
CareerHitting$fitted <- fitted( olsFit )
p <- p + geom_line( aes( x=age, y=Fitted,
color="blue") )
p
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  )
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit  )
CareerHitting$fitted <- fitted( olsFit )
p <- p + geom_line( aes( x=age, y=fitted,
color="blue") )
p
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm(y ~ poly(x, 3, raw=TRUE)),colour="red")
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm(obppslg ~ poly( sge, 3, raw=TRUE)),
colour="red")
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm(obppslg ~ poly( age, 3, raw=TRUE)),
colour="red")
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm(obppslg ~ poly( age, 3, raw=TRUE)),
colour="red")
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm( y ~ poly( x, 3, raw=TRUE)),
colour="red")
CareerHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm( y ~ poly( x, 3, raw=TRUE)),
colour="red")
rHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit )
rm( list=ls() )
load("Michael Young.rda")
require( ggplot2  )
p <- ggplot( CareerHitting,
aes( x=age, y=obppslg  )) +
geom_point() +
geom_smooth( method=loess  ) +
geom_smooth(method="lm",
se=TRUE, fill=NA,
formula=lm( y ~ poly( x, 3, raw=TRUE)),
colour="red")
rHitting$cAge <- with( CareerHitting, age - mean( age  ) )
CareerHitting$cAge2 <- with( CareerHitting, cAge * cAge)
olsFit <- lm( obppslg ~  cAge + cAge2, CareerHitting )
summary( olsFit )
m( list=ls() )
load("Michael Young.rda")
variables <- c( "age", "obppslg" )
rm( list=ls() )
load("Michael Young.rda")
variables <- c( "age", "obppslg" )
Career <- CaeerHitting[, variables ]
rm( list=ls() )
load("Michael Young.rda")
variables <- c( "age", "obppslg" )
Career <- CareerHitting[, variables ]
save( Career, file="Young.rda" )
variables <- c( "yearID", "age", "obppslg" )
Career <- CareerHitting[, variables ]
save( Career, file="Young.rda" )
require( Lahman )                                # Data from Lahman sabermetric package
?Lahman
data( Master )                                   # Load player biography data to obtian birth year
rm( list=ls() )                                  # Clear memory
require( Lahman )                                # Data from Lahman sabermetric package
data( Master )
require( sqldf  )
ssqldf
sqldf
?slfdf
?sqldf
head( Master[, 1:10])                            # Trust but verify
query <- paste( "SELECT playerId,",
"birthYear,",
"nameFirst,",
"nameLast",
"FROM Master",
"WHERE nameLast='Young'",
"AND nameFirst='Michael' )
")"
"
query <- paste( "SELECT playerId,",
"birthYear,",
"nameFirst,",
"nameLast",
"FROM Master",
"WHERE nameLast='Young'",
"AND nameFirst='Michael'" )
sqldf( query  )
YoungMaster <- sqldf( query  )
?Lahman
data( Batting )                                  # Obtain career batting records.
head( Batting )                                  # Verify result.
query = paste( "SELECT *",
"From Batting"
"Where Batting.playerID = ",
"YoungMaster.playerID" )
query = paste( "SELECT *",
"FROM Batting",
"Where Batting.playerID = ",
"YoungMaster.playerID" )
YoungBatting <- sqldf( query )
query = paste( "SELECT *",
"FROM Batting",
"Where Batting.playerID = ",
"YoungMaster$playerID" )
YoungBatting <- sqldf( query )
query = paste( "SELECT *",
"FROM YoungMaster,",
"Batting",
"Where Master.playerID = ",
"Batting.playerID" )
query
query = paste( "SELECT *",
"FROM YoungMaster,",
"Batting",
"WHERE YoungMaster.playerID = ",
"Batting.playerID" )
query
YoungBatting <- sqldf( query )
?rm
rm( list=c( "Master", "Batting") )              # Recover memory by discarding data frames no
?for each
YoungBatting$OBP <-                             # Compute Young's onbase percentage
with( YoungBatting,
( H + BB + IBB + HBP ) /
( AB + BB + IBB + HBP) )
YoungBatting$SLG <-                            # Cpmpute Young's slugging percentage.
with( YoungBatting,
( H + X2B + 2 * X3B + HR ) /
AB )
YoungBatting$age <-
with( YoungBatting,
YearID - YoungMaster$birthYear )
YoungBatting$age <-
with( YoungBatting,
YearID - birthYear )
YoungBatting$age <-
with( YoungBatting,
yearID - birthYear )
rm( list=ls() )                                  # Clear memory
require( Lahman )                                # Data from Lahman sabermetric package
data( Master )                                   # Load player biography data to obtian birth year
head( Master[, 1:10])                            # Trust but verify
require( sqldf  )                                # This package aloows us to use Structured Query
# Language to manipulte data frames
query <- paste( "SELECT playerId,",              # This is the SQL quesry used to locate
"birthYear,",             # Michael Youngs Master row in the Master
"nameFirst,",            # table by his first and last name.
"nameLast",
"FROM Master",
"WHERE nameLast='Young'",
"AND nameFirst='Michael'" )
YoungMaster <- sqldf( query  )                   # Execute query against master table.
head( YouingMaster )                             # Verify answer.
data( Batting )                                  # Obtain career batting records.
head( Batting )                                  # Verify result.
query = paste( "SELECT *",                       # This query findd and loads all the yearly batting
"FROM YoungMaster,",              # rows that have Mr. Young's battingID.
"Batting",
"WHERE YoungMaster.playerID = ",
"Batting.playerID" )
YoungBatting <- sqldf( query )                  # Execute query
rm( list=c( "Master", "Batting") )              # Recover memory by discarding data frames no
# longer needed.
YoungBatting$age <-                             # Compute age for each season.
with( YoungBatting,
yearID - birthYear )
YoungBatting$OBP <-                             # Compute Young's onbase percentage.
with( YoungBatting,
( H + BB + IBB + HBP ) /
( AB + BB + IBB + HBP) )
YoungBatting$SLG <-                            # Cpmpute Young's slugging percentage.
with( YoungBatting,
( H + X2B + 2 * X3B + HR ) /
AB )
YoungBatting$OBPS <-                           # Compute Youngs onbase plus
with( YoungBatting, OBP + SLG)               # plus slugging percentage
require( ggplot )                              # Needed for graphics grammar plots
rm( list=ls() )                                  # Clear memory
require( Lahman )                                # Data from Lahman sabermetric package
data( Master )                                   # Load player biography data to obtian birth year
head( Master[, 1:10])                            # Trust but verify
require( sqldf  )                                # This package aloows us to use Structured Query
# Language to manipulte data frames
query <- paste( "SELECT playerId,",              # This is the SQL quesry used to locate
"birthYear,",             # Michael Youngs Master row in the Master
"nameFirst,",            # table by his first and last name.
"nameLast",
"FROM Master",
"WHERE nameLast='Young'",
"AND nameFirst='Michael'" )
YoungMaster <- sqldf( query  )                   # Execute query against master table.
head( YouingMaster )                             # Verify answer.
data( Batting )                                  # Obtain career batting records.
head( Batting )                                  # Verify result.
query = paste( "SELECT *",                       # This query findd and loads all the yearly batting
"FROM YoungMaster,",              # rows that have Mr. Young's battingID.
"Batting",
"WHERE YoungMaster.playerID = ",
"Batting.playerID" )
YoungBatting <- sqldf( query )                  # Execute query
rm( list=c( "Master", "Batting") )              # Recover memory by discarding data frames no
# longer needed.
YoungBatting$age <-                             # Compute age for each season.
with( YoungBatting,
yearID - birthYear )
YoungBatting$OBP <-                             # Compute Young's onbase percentage.
with( YoungBatting,
( H + BB + IBB + HBP ) /
( AB + BB + IBB + HBP) )
YoungBatting$SLG <-                            # Cpmpute Young's slugging percentage.
with( YoungBatting,
( H + X2B + 2 * X3B + HR ) /
AB )
YoungBatting$OBPS <-                           # Compute Youngs onbase plus
with( YoungBatting, OBP + SLG)               # plus slugging percentage
require( ggplot2 )                             # Needed for graphics grammar plots
ggplot( YoungBatting,
aes( x=age, y=OBPS )) +
geom_point()
ggplot( YoungBatting,
aes( x=age, y=OBPS )) +
geom_point() +
geom_smooth( method=loess ) +
geom_smooth( method=lm,
formula=y~poly(x,2),
raw=TRUE,
colour="blue")
rm( list=ls() )                                  # Clear memory
require( Lahman )                                # Data from Lahman sabermetric package
data( Master )                                   # Load player biography data to obtian birth year
head( Master[, 1:10])                            # Trust but verify
require( sqldf  )                                # This package aloows us to use Structured Query
# Language to manipulte data frames
query <- paste( "SELECT playerId,",              # This is the SQL quesry used to locate
"birthYear,",             # Michael Youngs Master row in the Master
"nameFirst,",            # table by his first and last name.
"nameLast",
"FROM Master",
"WHERE nameLast='Young'",
"AND nameFirst='Michael'" )
YoungMaster <- sqldf( query  )                   # Execute query against master table.
head( YouingMaster )                             # Verify answer.
data( Batting )                                  # Obtain career batting records.
head( Batting )                                  # Verify result.
query = paste( "SELECT *",                       # This query findd and loads all the yearly batting
"FROM YoungMaster,",              # rows that have Mr. Young's battingID.
"Batting",
"WHERE YoungMaster.playerID = ",
"Batting.playerID" )
YoungBatting <- sqldf( query )                  # Execute query
rm( list=c( "Master", "Batting") )              # Recover memory by discarding data frames no
# longer needed.
YoungBatting$age <-                             # Compute age for each season.
with( YoungBatting,
yearID - birthYear )
YoungBatting$OBP <-                             # Compute Young's onbase percentage.
with( YoungBatting,
( H + BB + IBB + HBP ) /
( AB + BB + IBB + HBP) )
YoungBatting$SLG <-                            # Cpmpute Young's slugging percentage.
with( YoungBatting,
( H + X2B + 2 * X3B + HR ) /
AB )
YoungBatting$OBPS <-                           # Compute Youngs onbase plus
with( YoungBatting, OBP + SLG)               # plus slugging percentage
require( ggplot2 )                             # Needed for graphics grammar plots
ggplot( YoungBatting,
aes( x=age, y=OBPS )) +
geom_point() +
geom_smooth( method=loess,
color="red" ) +
geom_smooth( method=lm,
formula=y~poly(x,2),
raw=TRUE,
colour="blue") +
xlab("Age") +
ylab( "Onbase percentage plus slugging" ) +
ggtitle( "Michael Young's Hitting Career"  )
oldFit <- lm( OBPS ~ poly( age, 2 ), YoungBatting )
summary( oldFit )
quadraticFit <- lm( OBPS ~ poly( centeredAge, 2 ) )
quadraticFit <-
lm( OBPS ~ poly( centeredAge, 2 ),
YoungBatting )
YoungBatting$centeredAge <-
with( YoungBatting, age - mean( age ))
quadraticFit <-
lm( OBPS ~ poly( centeredAge, 2 ),
YoungBatting )
quadraticFit <-                              # Fit and display fit quadratic model
lm( OBPS ~ poly( centeredAge, 2 ),
YoungBatting )
summary(quadraticFit  )
quadraticFit <-                              # Fit and display fit quadratic model
lm( log(OBPS) ~ poly( centeredAge, 2 ),
YoungBatting )
summary(quadraticFit  )
quadraticFit <-                              # Fit and display fit quadratic model
lm( log(OBPS) ~ poly( centeredAge, 2 ),
YoungBatting )
summary(quadraticFit  )
quadraticFit <-                              # Fit and display fit quadratic model
lm( OBPS ~ poly( centeredAge, 2 ),
YoungBatting )
summary(quadraticFit  )
?coef
a <- coef( quadraticFit )[3]
b <- coef( quadraticFit )[2]
maxYear <- -b / ( 2 * a )
